;; This library is free software; you can redistribute it and/or modify
;; it under the terms of the GNU Lesser General Public License as
;; published by the Free Software Foundation; either version 3 of the
;; License, or (at your option) any later version.
;;
;; This library is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.
;;
;; You should have received a copy of the GNU Lesser General Public
;; License along with this library; if not, see
;; <http://www.gnu.org/licenses/>.


(def import-from flask Flask escape)
(def import-from werkzeug.routing parse_rule)


(defmacro declare-app [name]
  ;; Flask wants its application to be named app, so that's what we
  ;; bind it to.
  `{(def import-from flask [Flask as: &Flask])
    (define-global app (&Flask ,(str name)))})


(defmacro url-rule [name rule . body]
  (define formals
    (iter-each [[converter _ignored name] (parse_rule (str rule))]
               (symbol name) unless: (None? converter)))

  `(app.add_url_rule
    ,(str rule)
    endpoint: ,(str name)
    view_func: (function ,name (,@formals) ,@body)))


(defmacro json-rule [name rule . body]
  `{(def import-from json [dumps as: &dumps])
    (url-rule ,name ,rule (&dumps {,@body}))})


;;
;; The end.
